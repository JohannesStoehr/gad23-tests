package gad.avl;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

public class BigInsertionTest {
	@Test
	void bigInsertionTest2() {
		AVLTree tree62 = new AVLTree();
		tree62.insert(62);
		tree62.insert(29);
		tree62.insert(76);
		tree62.insert(7);
		tree62.insert(48);
		tree62.insert(66);
		tree62.insert(82);
		tree62.insert(1);
		tree62.insert(11);
		tree62.insert(35);
		tree62.insert(49);
		tree62.insert(64);
		tree62.insert(70);
		tree62.insert(77);
		tree62.insert(83);
		tree62.insert(1);
		tree62.insert(9);
		tree62.insert(19);
		tree62.insert(34);
		tree62.insert(38);
		tree62.insert(48);
		tree62.insert(54);
		tree62.insert(63);
		tree62.insert(67);
		tree62.insert(72);
		tree62.insert(78);
		tree62.insert(82);
		tree62.insert(87);
		tree62.insert(28);
		tree62.insert(30);
		tree62.insert(36);
		tree62.insert(45);
		tree62.insert(50);
		tree62.insert(58);
		tree62.insert(85);
		tree62.insert(90);
		tree62.insert(37);
		tree62.insert(41);
		// .replace("\n","\r\n");
		assertEquals(tree62toString(), tree62.toString());
		tree62.insert(20);
		assertEquals(tree20toString(), tree62.toString());
		tree62.insert(59);
		tree62.insert(60);
		tree62.insert(61);
		assertEquals(tree59toString(), tree62.toString());
	}

	@Test
	void bigInsertionTest1() {
		AVLTree tree54 = new AVLTree();
		tree54.insert(54);
		tree54.insert(25);
		tree54.insert(67);
		tree54.insert(8);
		tree54.insert(41);
		tree54.insert(60);
		tree54.insert(88);
		tree54.insert(6);
		tree54.insert(20);
		tree54.insert(31);
		tree54.insert(47);
		tree54.insert(56);
		tree54.insert(63);
		tree54.insert(80);
		tree54.insert(97);
		tree54.insert(4);
		tree54.insert(25);
		tree54.insert(33);
		tree54.insert(47);
		tree54.insert(51);
		tree54.insert(56);
		tree54.insert(58);
		tree54.insert(65);
		tree54.insert(76);
		tree54.insert(86);
		tree54.insert(96);
		tree54.insert(99);
		tree54.insert(25);
		tree54.insert(51);
		tree54.insert(71);
		tree54.insert(84);
		tree54.insert(97);
		assertEquals(tree54toString(), tree54.toString());
		tree54.insert(28);
		assertEquals(tree28toString(), tree54.toString());
		tree54.insert(98);
		assertEquals(tree98toString(), tree54.toString());
	}

	public static String tree59toString() {
		return """
				digraph {
					0 [label="62, b=-1"];
					0 -> 1 [label="l"];
					1 [label="29, b=1"];
					1 -> 2 [label="l"];
					2 [label="7, b=1"];
					2 -> 3 [label="l"];
					3 [label="1, b=1"];
					3 -> 4 [label="r"];
					4 [label="1, b=0"];
					2 -> 5 [label="r"];
					5 [label="11, b=1"];
					5 -> 6 [label="l"];
					6 [label="9, b=0"];
					5 -> 7 [label="r"];
					7 [label="20, b=0"];
					7 -> 8 [label="l"];
					8 [label="19, b=0"];
					7 -> 9 [label="r"];
					9 [label="28, b=0"];
					1 -> 10 [label="r"];
					10 [label="48, b=0"];
					10 -> 11 [label="l"];
					11 [label="35, b=1"];
					11 -> 12 [label="l"];
					12 [label="34, b=-1"];
					12 -> 13 [label="l"];
					13 [label="30, b=0"];
					11 -> 14 [label="r"];
					14 [label="38, b=0"];
					14 -> 15 [label="l"];
					15 [label="36, b=1"];
					15 -> 16 [label="r"];
					16 [label="37, b=0"];
					14 -> 17 [label="r"];
					17 [label="45, b=-1"];
					17 -> 18 [label="l"];
					18 [label="41, b=0"];
					10 -> 19 [label="r"];
					19 [label="54, b=1"];
					19 -> 20 [label="l"];
					20 [label="49, b=0"];
					20 -> 21 [label="l"];
					21 [label="48, b=0"];
					20 -> 22 [label="r"];
					22 [label="50, b=0"];
					19 -> 23 [label="r"];
					23 [label="59, b=1"];
					23 -> 24 [label="l"];
					24 [label="58, b=0"];
					23 -> 25 [label="r"];
					25 [label="60, b=1"];
					25 -> 26 [label="r"];
					26 [label="61, b=0"];
					0 -> 27 [label="r"];
					27 [label="76, b=1"];
					27 -> 28 [label="l"];
					28 [label="66, b=0"];
					28 -> 29 [label="l"];
					29 [label="64, b=-1"];
					29 -> 30 [label="l"];
					30 [label="63, b=0"];
					28 -> 31 [label="r"];
					31 [label="70, b=0"];
					31 -> 32 [label="l"];
					32 [label="67, b=0"];
					31 -> 33 [label="r"];
					33 [label="72, b=0"];
					27 -> 34 [label="r"];
					34 [label="82, b=1"];
					34 -> 35 [label="l"];
					35 [label="77, b=1"];
					35 -> 36 [label="r"];
					36 [label="78, b=0"];
					34 -> 37 [label="r"];
					37 [label="83, b=1"];
					37 -> 38 [label="l"];
					38 [label="82, b=0"];
					37 -> 39 [label="r"];
					39 [label="87, b=0"];
					39 -> 40 [label="l"];
					40 [label="85, b=0"];
					39 -> 41 [label="r"];
					41 [label="90, b=0"];
				}""";
	}

	public static String tree20toString() {
		return """
				digraph {
					0 [label="62, b=-1"];
					0 -> 1 [label="l"];
					1 [label="29, b=1"];
					1 -> 2 [label="l"];
					2 [label="7, b=1"];
					2 -> 3 [label="l"];
					3 [label="1, b=1"];
					3 -> 4 [label="r"];
					4 [label="1, b=0"];
					2 -> 5 [label="r"];
					5 [label="11, b=1"];
					5 -> 6 [label="l"];
					6 [label="9, b=0"];
					5 -> 7 [label="r"];
					7 [label="20, b=0"];
					7 -> 8 [label="l"];
					8 [label="19, b=0"];
					7 -> 9 [label="r"];
					9 [label="28, b=0"];
					1 -> 10 [label="r"];
					10 [label="48, b=-1"];
					10 -> 11 [label="l"];
					11 [label="35, b=1"];
					11 -> 12 [label="l"];
					12 [label="34, b=-1"];
					12 -> 13 [label="l"];
					13 [label="30, b=0"];
					11 -> 14 [label="r"];
					14 [label="38, b=0"];
					14 -> 15 [label="l"];
					15 [label="36, b=1"];
					15 -> 16 [label="r"];
					16 [label="37, b=0"];
					14 -> 17 [label="r"];
					17 [label="45, b=-1"];
					17 -> 18 [label="l"];
					18 [label="41, b=0"];
					10 -> 19 [label="r"];
					19 [label="49, b=1"];
					19 -> 20 [label="l"];
					20 [label="48, b=0"];
					19 -> 21 [label="r"];
					21 [label="54, b=0"];
					21 -> 22 [label="l"];
					22 [label="50, b=0"];
					21 -> 23 [label="r"];
					23 [label="58, b=0"];
					0 -> 24 [label="r"];
					24 [label="76, b=1"];
					24 -> 25 [label="l"];
					25 [label="66, b=0"];
					25 -> 26 [label="l"];
					26 [label="64, b=-1"];
					26 -> 27 [label="l"];
					27 [label="63, b=0"];
					25 -> 28 [label="r"];
					28 [label="70, b=0"];
					28 -> 29 [label="l"];
					29 [label="67, b=0"];
					28 -> 30 [label="r"];
					30 [label="72, b=0"];
					24 -> 31 [label="r"];
					31 [label="82, b=1"];
					31 -> 32 [label="l"];
					32 [label="77, b=1"];
					32 -> 33 [label="r"];
					33 [label="78, b=0"];
					31 -> 34 [label="r"];
					34 [label="83, b=1"];
					34 -> 35 [label="l"];
					35 [label="82, b=0"];
					34 -> 36 [label="r"];
					36 [label="87, b=0"];
					36 -> 37 [label="l"];
					37 [label="85, b=0"];
					36 -> 38 [label="r"];
					38 [label="90, b=0"];
				}""";
	}

	public static String tree62toString() {
		return """
				digraph {
					0 [label="62, b=-1"];
					0 -> 1 [label="l"];
					1 [label="29, b=1"];
					1 -> 2 [label="l"];
					2 [label="7, b=1"];
					2 -> 3 [label="l"];
					3 [label="1, b=1"];
					3 -> 4 [label="r"];
					4 [label="1, b=0"];
					2 -> 5 [label="r"];
					5 [label="11, b=1"];
					5 -> 6 [label="l"];
					6 [label="9, b=0"];
					5 -> 7 [label="r"];
					7 [label="19, b=1"];
					7 -> 8 [label="r"];
					8 [label="28, b=0"];
					1 -> 9 [label="r"];
					9 [label="48, b=-1"];
					9 -> 10 [label="l"];
					10 [label="35, b=1"];
					10 -> 11 [label="l"];
					11 [label="34, b=-1"];
					11 -> 12 [label="l"];
					12 [label="30, b=0"];
					10 -> 13 [label="r"];
					13 [label="38, b=0"];
					13 -> 14 [label="l"];
					14 [label="36, b=1"];
					14 -> 15 [label="r"];
					15 [label="37, b=0"];
					13 -> 16 [label="r"];
					16 [label="45, b=-1"];
					16 -> 17 [label="l"];
					17 [label="41, b=0"];
					9 -> 18 [label="r"];
					18 [label="49, b=1"];
					18 -> 19 [label="l"];
					19 [label="48, b=0"];
					18 -> 20 [label="r"];
					20 [label="54, b=0"];
					20 -> 21 [label="l"];
					21 [label="50, b=0"];
					20 -> 22 [label="r"];
					22 [label="58, b=0"];
					0 -> 23 [label="r"];
					23 [label="76, b=1"];
					23 -> 24 [label="l"];
					24 [label="66, b=0"];
					24 -> 25 [label="l"];
					25 [label="64, b=-1"];
					25 -> 26 [label="l"];
					26 [label="63, b=0"];
					24 -> 27 [label="r"];
					27 [label="70, b=0"];
					27 -> 28 [label="l"];
					28 [label="67, b=0"];
					27 -> 29 [label="r"];
					29 [label="72, b=0"];
					23 -> 30 [label="r"];
					30 [label="82, b=1"];
					30 -> 31 [label="l"];
					31 [label="77, b=1"];
					31 -> 32 [label="r"];
					32 [label="78, b=0"];
					30 -> 33 [label="r"];
					33 [label="83, b=1"];
					33 -> 34 [label="l"];
					34 [label="82, b=0"];
					33 -> 35 [label="r"];
					35 [label="87, b=0"];
					35 -> 36 [label="l"];
					36 [label="85, b=0"];
					35 -> 37 [label="r"];
					37 [label="90, b=0"];
				}""";
	}

	public static String tree98toString() {
		return """
				digraph {
					0 [label="54, b=0"];
					0 -> 1 [label="l"];
					1 [label="25, b=1"];
					1 -> 2 [label="l"];
					2 [label="8, b=-1"];
					2 -> 3 [label="l"];
					3 [label="6, b=-1"];
					3 -> 4 [label="l"];
					4 [label="4, b=0"];
					2 -> 5 [label="r"];
					5 [label="20, b=0"];
					1 -> 6 [label="r"];
					6 [label="41, b=0"];
					6 -> 7 [label="l"];
					7 [label="31, b=-1"];
					7 -> 8 [label="l"];
					8 [label="25, b=0"];
					8 -> 9 [label="l"];
					9 [label="25, b=0"];
					8 -> 10 [label="r"];
					10 [label="28, b=0"];
					7 -> 11 [label="r"];
					11 [label="33, b=0"];
					6 -> 12 [label="r"];
					12 [label="47, b=1"];
					12 -> 13 [label="l"];
					13 [label="47, b=0"];
					12 -> 14 [label="r"];
					14 [label="51, b=1"];
					14 -> 15 [label="r"];
					15 [label="51, b=0"];
					0 -> 16 [label="r"];
					16 [label="67, b=1"];
					16 -> 17 [label="l"];
					17 [label="60, b=0"];
					17 -> 18 [label="l"];
					18 [label="56, b=0"];
					18 -> 19 [label="l"];
					19 [label="56, b=0"];
					18 -> 20 [label="r"];
					20 [label="58, b=0"];
					17 -> 21 [label="r"];
					21 [label="63, b=1"];
					21 -> 22 [label="r"];
					22 [label="65, b=0"];
					16 -> 23 [label="r"];
					23 [label="88, b=0"];
					23 -> 24 [label="l"];
					24 [label="80, b=0"];
					24 -> 25 [label="l"];
					25 [label="76, b=-1"];
					25 -> 26 [label="l"];
					26 [label="71, b=0"];
					24 -> 27 [label="r"];
					27 [label="86, b=-1"];
					27 -> 28 [label="l"];
					28 [label="84, b=0"];
					23 -> 29 [label="r"];
					29 [label="97, b=1"];
					29 -> 30 [label="l"];
					30 [label="96, b=0"];
					29 -> 31 [label="r"];
					31 [label="98, b=0"];
					31 -> 32 [label="l"];
					32 [label="97, b=0"];
					31 -> 33 [label="r"];
					33 [label="99, b=0"];
				}""";
	}

	public static String tree28toString() {
		return """
				digraph {
					0 [label="54, b=0"];
					0 -> 1 [label="l"];
					1 [label="25, b=1"];
					1 -> 2 [label="l"];
					2 [label="8, b=-1"];
					2 -> 3 [label="l"];
					3 [label="6, b=-1"];
					3 -> 4 [label="l"];
					4 [label="4, b=0"];
					2 -> 5 [label="r"];
					5 [label="20, b=0"];
					1 -> 6 [label="r"];
					6 [label="41, b=0"];
					6 -> 7 [label="l"];
					7 [label="31, b=-1"];
					7 -> 8 [label="l"];
					8 [label="25, b=0"];
					8 -> 9 [label="l"];
					9 [label="25, b=0"];
					8 -> 10 [label="r"];
					10 [label="28, b=0"];
					7 -> 11 [label="r"];
					11 [label="33, b=0"];
					6 -> 12 [label="r"];
					12 [label="47, b=1"];
					12 -> 13 [label="l"];
					13 [label="47, b=0"];
					12 -> 14 [label="r"];
					14 [label="51, b=1"];
					14 -> 15 [label="r"];
					15 [label="51, b=0"];
					0 -> 16 [label="r"];
					16 [label="67, b=1"];
					16 -> 17 [label="l"];
					17 [label="60, b=0"];
					17 -> 18 [label="l"];
					18 [label="56, b=0"];
					18 -> 19 [label="l"];
					19 [label="56, b=0"];
					18 -> 20 [label="r"];
					20 [label="58, b=0"];
					17 -> 21 [label="r"];
					21 [label="63, b=1"];
					21 -> 22 [label="r"];
					22 [label="65, b=0"];
					16 -> 23 [label="r"];
					23 [label="88, b=0"];
					23 -> 24 [label="l"];
					24 [label="80, b=0"];
					24 -> 25 [label="l"];
					25 [label="76, b=-1"];
					25 -> 26 [label="l"];
					26 [label="71, b=0"];
					24 -> 27 [label="r"];
					27 [label="86, b=-1"];
					27 -> 28 [label="l"];
					28 [label="84, b=0"];
					23 -> 29 [label="r"];
					29 [label="97, b=1"];
					29 -> 30 [label="l"];
					30 [label="96, b=0"];
					29 -> 31 [label="r"];
					31 [label="99, b=-1"];
					31 -> 32 [label="l"];
					32 [label="97, b=0"];
				}""";
	}

	public static String tree54toString() {
		return """
				digraph {
					0 [label="54, b=0"];
					0 -> 1 [label="l"];
					1 [label="25, b=1"];
					1 -> 2 [label="l"];
					2 [label="8, b=-1"];
					2 -> 3 [label="l"];
					3 [label="6, b=-1"];
					3 -> 4 [label="l"];
					4 [label="4, b=0"];
					2 -> 5 [label="r"];
					5 [label="20, b=0"];
					1 -> 6 [label="r"];
					6 [label="41, b=0"];
					6 -> 7 [label="l"];
					7 [label="31, b=-1"];
					7 -> 8 [label="l"];
					8 [label="25, b=1"];
					8 -> 9 [label="r"];
					9 [label="25, b=0"];
					7 -> 10 [label="r"];
					10 [label="33, b=0"];
					6 -> 11 [label="r"];
					11 [label="47, b=1"];
					11 -> 12 [label="l"];
					12 [label="47, b=0"];
					11 -> 13 [label="r"];
					13 [label="51, b=1"];
					13 -> 14 [label="r"];
					14 [label="51, b=0"];
					0 -> 15 [label="r"];
					15 [label="67, b=1"];
					15 -> 16 [label="l"];
					16 [label="60, b=0"];
					16 -> 17 [label="l"];
					17 [label="56, b=0"];
					17 -> 18 [label="l"];
					18 [label="56, b=0"];
					17 -> 19 [label="r"];
					19 [label="58, b=0"];
					16 -> 20 [label="r"];
					20 [label="63, b=1"];
					20 -> 21 [label="r"];
					21 [label="65, b=0"];
					15 -> 22 [label="r"];
					22 [label="88, b=0"];
					22 -> 23 [label="l"];
					23 [label="80, b=0"];
					23 -> 24 [label="l"];
					24 [label="76, b=-1"];
					24 -> 25 [label="l"];
					25 [label="71, b=0"];
					23 -> 26 [label="r"];
					26 [label="86, b=-1"];
					26 -> 27 [label="l"];
					27 [label="84, b=0"];
					22 -> 28 [label="r"];
					28 [label="97, b=1"];
					28 -> 29 [label="l"];
					29 [label="96, b=0"];
					28 -> 30 [label="r"];
					30 [label="99, b=-1"];
					30 -> 31 [label="l"];
					31 [label="97, b=0"];
				}""";
	}
}
